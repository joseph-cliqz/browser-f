def dockerTag
def dockerImage
def dockerImageName
def volumeStr
pipeline {
	agent { 
		label "master"
	}
	stages{
		stage('Checkout') {
			steps {
				checkout scm
				script{
					dockerTag = readFile('mozilla-release/browser/config/version.txt').trim()
				}
		        sh """#!/bin/bash -l
		            rm -rf mozilla-release/objdir-frontend-android
		        """
			}
		}
		stage ('Build base image'){
			steps {
				echo 'Build docker image'
				script{
					volumeStr = "$WORKSPACE"
					dockerImageName = "browser-f/geckoview:${dockerTag}"
					dockerImage = docker.build(dockerImageName, '--build-arg USER=`whoami` --build-arg UID=`id -u` --build-arg GID=`id -g` -f Dockerfile .')
				}
			}
		}
		stage('Parallel Build'){
			parallel {
				stage('Build, Publish and Upload Arm to S3') {
					agent{
						docker {
							image "browser-f/geckoview:66.0.3"
						}
					}
					environment {
						ANDROID_TARGET='arm-linux-androideabi'
					}		
					steps {
						withCredentials([
							[	
								$class: 'UsernamePasswordMultiBinding', 
								usernameVariable: 'AWS_ACCESS_KEY_ID', 
								credentialsId: 'f1732e5f-3e84-47ad-9286-a5fa6657ec43', 
								passwordVariable: 'AWS_SECRET_ACCESS_KEY'
							]
						]) {
							sh """#!/bin/bash -l
					            set -x
					            set -e
					            echo '*** Build and Package the Browser ***'
					            cd mozilla-release
					            mv mozconfig.test mozconfig
					            rm -rf objdir-frontend-android
					            ./mach clobber
					            ./mach build
					            ./mach package
					            echo '*** Publish Gecko Binaries To Maven ***'
					            ./gradlew geckoview:publishWithGeckoBinariesDebugPublicationToMavenLocal
				            	./mach android archive-geckoview
					            echo '*** Uploading Maven to S3 ***'
					            aws s3 sync --acl public-read --acl bucket-owner-full-control objdir-frontend-android/gradle/build/mobile/android/geckoview/maven s3://repository.cliqz.com/dist/maven
					        """
						}
					}
				}
				stage('Build, Publish and Upload x86 to S3') {	
					agent{
						docker {
							image "browser-f/geckoview:66.0.3"
						}
					}
					environment {
						ANDROID_TARGET='i686-linux-android'
					}			
					steps {
						withCredentials([
							[	
								$class: 'UsernamePasswordMultiBinding', 
								usernameVariable: 'AWS_ACCESS_KEY_ID', 
								credentialsId: 'f1732e5f-3e84-47ad-9286-a5fa6657ec43', 
								passwordVariable: 'AWS_SECRET_ACCESS_KEY'
							]
						]) {
							sh """#!/bin/bash -l
					            set -x
					            set -e
					            echo '*** Build and Package the Browser ***'
					            cd mozilla-release
					            mv mozconfig.test mozconfig
					            rm -rf objdir-frontend-android
					            ./mach clobber
					            ./mach build
					            ./mach package
					            echo '*** Publish Gecko Binaries To Maven ***'
					            ./gradlew geckoview:publishWithGeckoBinariesDebugPublicationToMavenLocal
				            	./mach android archive-geckoview
					            echo '*** Uploading Maven to S3 ***'
					            aws s3 sync --acl public-read --acl bucket-owner-full-control objdir-frontend-android/gradle/build/mobile/android/geckoview/maven s3://repository.cliqz.com/dist/maven
					        """
						}
					}
				}				
			}
		}
	}
	post {
		always {
			echo 'Its Geckoview!!'
		}
	}
}